import json

from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton

from config import dt, fs
from loader import bot


def keyboard_nov(group_id):
    keyboard = InlineKeyboardMarkup(row_width=2)
    punishment_ban_words = InlineKeyboardButton("–ë–∞–Ω-—Å–ª–æ–≤–æ", callback_data="m1" + str(group_id))
    punishment_bad_comment = InlineKeyboardButton("–ü–ª–æ—Ö–æ–π –∫–æ–º–º–µ–Ω—Ç", callback_data="m2" + str(group_id))
    good_comment_reward = InlineKeyboardButton("–•–æ—Ä–æ—à–∏–π –∫–æ–º–º–µ–Ω—Ç", callback_data="m3" + str(group_id))
    new_messages = InlineKeyboardButton("–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ", callback_data="m4" + str(group_id))
    no_messages = InlineKeyboardButton("–ù–µ–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å", callback_data="m5" + str(group_id))
    time = InlineKeyboardButton("–í—Ä–µ–º—è", callback_data="m6" + str(group_id))
    exitbutton = InlineKeyboardButton(text="–≤—ã—Ö–æ–¥ ‚úñÔ∏è", callback_data="ss")
    backbutton = InlineKeyboardButton('–Ω–∞–∑–∞–¥', callback_data="st:" + str(group_id))
    keyboard.add(punishment_ban_words, punishment_bad_comment, good_comment_reward, new_messages, no_messages, time,
                 exitbutton, backbutton)
    return keyboard


def main_motivation(call, group_id):
    f = open('groups/' + str(group_id) + '/list_banned_words.json', 'r', encoding='utf-8')
    list = json.load(f)

    bot.edit_message_text(message_id=call.message.message_id, chat_id=call.message.chat.id,
                          text=f'üìã–ú–µ–Ω—é —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –º–æ—Ç–∏–≤–∞—Ü–∏–∏.\n'
                               f'‚úèÔ∏è–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑ —Å–ø–∏—Å–∫–∞, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å.\n\n'
                               f'üö´–ü–æ–Ω–∏–∑–∏—Ç—å –∑–∞ –ë–ê–ù-–°–õ–û–í–ê: <b>{list["karma"]["punishment_ban_words"]}</b>\n'
                               f'üëé–ü–æ–Ω–∏–∑–∏—Ç—å –∑–∞ –ü–õ–û–•–û–ô –ö–û–ú–ú–ï–ù–¢: <b>{list["karma"]["punishment_bad_comment"]}</b>\n'
                               f'üëç–ü–æ–≤—ã—Å–∏—Ç—å –∑–∞ –•–û–†–û–®–ò–ô –ö–û–ú–ú–ï–ù–¢: <b>{list["karma"]["good_comment_reward"]}</b>\n'
                               f'\n'
                               f'üìù–ü–æ–≤—ã—Å–∏—Ç—å –∑–∞ –ù–û–í–û–ï –°–û–û–ë–©–ï–ù–ò–ï: <b>{list["active"]["new_messages"]}</b> \n'
                               f'‚õî–ü–æ–Ω–∏–∑–∏—Ç—å –∑–∞ –ù–ï–ê–ö–¢–ò–í–ù–û–°–¢–¨: <b>{list["active"]["no_messages"]}</b>\n'
                               f'üïú–í–†–ï–ú–Ø –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤ —Ç–µ—á–µ–Ω–∏–∏: <b>{int(list["active"]["time"] / 60 / 60)}</b> —á–∞—Å–æ–≤.',
                          reply_markup=keyboard_nov(group_id),
                          parse_mode="html", disable_web_page_preview=True)


def edit_motivation(message, call, group_id, val):
    f = open('groups/' + str(group_id) + '/list_banned_words.json', 'r', encoding='utf-8')
    list_on = json.load(f)

    if message.content_type == ("text") and message.text.replace(" ", "") and message.text.isdigit():
        bot.delete_message(message.chat.id, message.message_id - 1)
        if val == "1":
            list_on["karma"]["punishment_ban_words"] = int(message.text)
            with open('groups/' + str(group_id) + '/list_banned_words.json', "w", encoding="utf-8") as f:
                json.dump(list_on, f, ensure_ascii=False, indent=4)
                f.close()
            f = open('groups/' + str(group_id) + '/list_banned_words.json', 'r', encoding='utf-8')
            list = json.load(f)
            bot.edit_message_text(message_id=call.message.message_id, chat_id=call.message.chat.id,
                                  text=f'üìã–ú–µ–Ω—é —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –º–æ—Ç–∏–≤–∞—Ü–∏–∏.\n'
                                       f'‚úèÔ∏è–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑ —Å–ø–∏—Å–∫–∞, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å.\n\n'
                                       f'üö´–ü–æ–Ω–∏–∑–∏—Ç—å –∑–∞ –ë–ê–ù-–°–õ–û–í–ê: <b>{list["karma"]["punishment_ban_words"]}</b>\n'
                                       f'üëé–ü–æ–Ω–∏–∑–∏—Ç—å –∑–∞ –ü–õ–û–•–û–ô –ö–û–ú–ú–ï–ù–¢: <b>{list["karma"]["punishment_bad_comment"]}</b>\n'
                                       f'üëç–ü–æ–≤—ã—Å–∏—Ç—å –∑–∞ –•–û–†–û–®–ò–ô –ö–û–ú–ú–ï–ù–¢: <b>{list["karma"]["good_comment_reward"]}</b>\n'
                                       f'\n'
                                       f'üìù–ü–æ–≤—ã—Å–∏—Ç—å –∑–∞ –ù–û–í–û–ï –°–û–û–ë–©–ï–ù–ò–ï: <b>{list["active"]["new_messages"]}</b> \n'
                                       f'‚õî–ü–æ–Ω–∏–∑–∏—Ç—å –∑–∞ –ù–ï–ê–ö–¢–ò–í–ù–û–°–¢–¨: <b>{list["active"]["no_messages"]}</b>\n'
                                       f'üïú–í–†–ï–ú–Ø –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤ —Ç–µ—á–µ–Ω–∏–∏: <b>{int(list["active"]["time"] / 60 / 60)}</b> —á–∞—Å–æ–≤.',
                                  reply_markup=keyboard_nov(group_id),
                                  parse_mode="html", disable_web_page_preview=True)
            bot.delete_message(message.chat.id, message.message_id)
        if val == "2":
            list_on["karma"]["punishment_bad_comment"] = int(message.text)
            with open('groups/' + str(group_id) + '/list_banned_words.json', "w", encoding="utf-8") as f:
                json.dump(list_on, f, ensure_ascii=False, indent=4)
                f.close()
            f = open('groups/' + str(group_id) + '/list_banned_words.json', 'r', encoding='utf-8')
            list = json.load(f)
            bot.edit_message_text(message_id=call.message.message_id, chat_id=call.message.chat.id,
                                  text=f'üìã–ú–µ–Ω—é —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –º–æ—Ç–∏–≤–∞—Ü–∏–∏.\n'
                                       f'‚úèÔ∏è–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑ —Å–ø–∏—Å–∫–∞, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å.\n\n'
                                       f'üö´–ü–æ–Ω–∏–∑–∏—Ç—å –∑–∞ –ë–ê–ù-–°–õ–û–í–ê: <b>{list["karma"]["punishment_ban_words"]}</b>\n'
                                       f'üëé–ü–æ–Ω–∏–∑–∏—Ç—å –∑–∞ –ü–õ–û–•–û–ô –ö–û–ú–ú–ï–ù–¢: <b>{list["karma"]["punishment_bad_comment"]}</b>\n'
                                       f'üëç–ü–æ–≤—ã—Å–∏—Ç—å –∑–∞ –•–û–†–û–®–ò–ô –ö–û–ú–ú–ï–ù–¢: <b>{list["karma"]["good_comment_reward"]}</b>\n'
                                       f'\n'
                                       f'üìù–ü–æ–≤—ã—Å–∏—Ç—å –∑–∞ –ù–û–í–û–ï –°–û–û–ë–©–ï–ù–ò–ï: <b>{list["active"]["new_messages"]}</b> \n'
                                       f'‚õî–ü–æ–Ω–∏–∑–∏—Ç—å –∑–∞ –ù–ï–ê–ö–¢–ò–í–ù–û–°–¢–¨: <b>{list["active"]["no_messages"]}</b>\n'
                                       f'üïú–í–†–ï–ú–Ø –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤ —Ç–µ—á–µ–Ω–∏–∏: <b>{int(list["active"]["time"] / 60 / 60)}</b> —á–∞—Å–æ–≤.',
                                  reply_markup=keyboard_nov(group_id),
                                  parse_mode="html", disable_web_page_preview=True)
            bot.delete_message(message.chat.id, message.message_id)
        if val == "3":
            list_on["karma"]["good_comment_reward"] = int(message.text)
            with open('groups/' + str(group_id) + '/list_banned_words.json', "w", encoding="utf-8") as f:
                json.dump(list_on, f, ensure_ascii=False, indent=4)
                f.close()
            f = open('groups/' + str(group_id) + '/list_banned_words.json', 'r', encoding='utf-8')
            list = json.load(f)
            bot.edit_message_text(message_id=call.message.message_id, chat_id=call.message.chat.id,
                                  text=f'üìã–ú–µ–Ω—é —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –º–æ—Ç–∏–≤–∞—Ü–∏–∏.\n'
                                       f'‚úèÔ∏è–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑ —Å–ø–∏—Å–∫–∞, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å.\n\n'
                                       f'üö´–ü–æ–Ω–∏–∑–∏—Ç—å –∑–∞ –ë–ê–ù-–°–õ–û–í–ê: <b>{list["karma"]["punishment_ban_words"]}</b>\n'
                                       f'üëé–ü–æ–Ω–∏–∑–∏—Ç—å –∑–∞ –ü–õ–û–•–û–ô –ö–û–ú–ú–ï–ù–¢: <b>{list["karma"]["punishment_bad_comment"]}</b>\n'
                                       f'üëç–ü–æ–≤—ã—Å–∏—Ç—å –∑–∞ –•–û–†–û–®–ò–ô –ö–û–ú–ú–ï–ù–¢: <b>{list["karma"]["good_comment_reward"]}</b>\n'
                                       f'\n'
                                       f'üìù–ü–æ–≤—ã—Å–∏—Ç—å –∑–∞ –ù–û–í–û–ï –°–û–û–ë–©–ï–ù–ò–ï: <b>{list["active"]["new_messages"]}</b> \n'
                                       f'‚õî–ü–æ–Ω–∏–∑–∏—Ç—å –∑–∞ –ù–ï–ê–ö–¢–ò–í–ù–û–°–¢–¨: <b>{list["active"]["no_messages"]}</b>\n'
                                       f'üïú–í–†–ï–ú–Ø –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤ —Ç–µ—á–µ–Ω–∏–∏: <b>{int(list["active"]["time"] / 60 / 60)}</b> —á–∞—Å–æ–≤.',
                                  reply_markup=keyboard_nov(group_id),
                                  parse_mode="html", disable_web_page_preview=True)
            bot.delete_message(message.chat.id, message.message_id)
        if val == "4":
            list_on["active"]["new_messages"] = int(message.text)
            with open('groups/' + str(group_id) + '/list_banned_words.json', "w", encoding="utf-8") as f:
                json.dump(list_on, f, ensure_ascii=False, indent=4)
                f.close()
            f = open('groups/' + str(group_id) + '/list_banned_words.json', 'r', encoding='utf-8')
            list = json.load(f)
            bot.edit_message_text(message_id=call.message.message_id, chat_id=call.message.chat.id,
                                  text=f'üìã–ú–µ–Ω—é —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –º–æ—Ç–∏–≤–∞—Ü–∏–∏.\n'
                                       f'‚úèÔ∏è–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑ —Å–ø–∏—Å–∫–∞, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å.\n\n'
                                       f'üö´–ü–æ–Ω–∏–∑–∏—Ç—å –∑–∞ –ë–ê–ù-–°–õ–û–í–ê: <b>{list["karma"]["punishment_ban_words"]}</b>\n'
                                       f'üëé–ü–æ–Ω–∏–∑–∏—Ç—å –∑–∞ –ü–õ–û–•–û–ô –ö–û–ú–ú–ï–ù–¢: <b>{list["karma"]["punishment_bad_comment"]}</b>\n'
                                       f'üëç–ü–æ–≤—ã—Å–∏—Ç—å –∑–∞ –•–û–†–û–®–ò–ô –ö–û–ú–ú–ï–ù–¢: <b>{list["karma"]["good_comment_reward"]}</b>\n'
                                       f'\n'
                                       f'üìù–ü–æ–≤—ã—Å–∏—Ç—å –∑–∞ –ù–û–í–û–ï –°–û–û–ë–©–ï–ù–ò–ï: <b>{list["active"]["new_messages"]}</b> \n'
                                       f'‚õî–ü–æ–Ω–∏–∑–∏—Ç—å –∑–∞ –ù–ï–ê–ö–¢–ò–í–ù–û–°–¢–¨: <b>{list["active"]["no_messages"]}</b>\n'
                                       f'üïú–í–†–ï–ú–Ø –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤ —Ç–µ—á–µ–Ω–∏–∏: <b>{int(list["active"]["time"] / 60 / 60)}</b> —á–∞—Å–æ–≤.',
                                  reply_markup=keyboard_nov(group_id),
                                  parse_mode="html", disable_web_page_preview=True)
            bot.delete_message(message.chat.id, message.message_id)
        if val == "5":
            list_on["active"]["no_messages"] = int(message.text)
            with open('groups/' + str(group_id) + '/list_banned_words.json', "w", encoding="utf-8") as f:
                json.dump(list_on, f, ensure_ascii=False, indent=4)
                f.close()
            f = open('groups/' + str(group_id) + '/list_banned_words.json', 'r', encoding='utf-8')
            list = json.load(f)
            bot.edit_message_text(message_id=call.message.message_id, chat_id=call.message.chat.id,
                                  text=f'üìã–ú–µ–Ω—é —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –º–æ—Ç–∏–≤–∞—Ü–∏–∏.\n'
                                       f'‚úèÔ∏è–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑ —Å–ø–∏—Å–∫–∞, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å.\n\n'
                                       f'üö´–ü–æ–Ω–∏–∑–∏—Ç—å –∑–∞ –ë–ê–ù-–°–õ–û–í–ê: <b>{list["karma"]["punishment_ban_words"]}</b>\n'
                                       f'üëé–ü–æ–Ω–∏–∑–∏—Ç—å –∑–∞ –ü–õ–û–•–û–ô –ö–û–ú–ú–ï–ù–¢: <b>{list["karma"]["punishment_bad_comment"]}</b>\n'
                                       f'üëç–ü–æ–≤—ã—Å–∏—Ç—å –∑–∞ –•–û–†–û–®–ò–ô –ö–û–ú–ú–ï–ù–¢: <b>{list["karma"]["good_comment_reward"]}</b>\n'
                                       f'\n'
                                       f'üìù–ü–æ–≤—ã—Å–∏—Ç—å –∑–∞ –ù–û–í–û–ï –°–û–û–ë–©–ï–ù–ò–ï: <b>{list["active"]["new_messages"]}</b> \n'
                                       f'‚õî–ü–æ–Ω–∏–∑–∏—Ç—å –∑–∞ –ù–ï–ê–ö–¢–ò–í–ù–û–°–¢–¨: <b>{list["active"]["no_messages"]}</b>\n'
                                       f'üïú–í–†–ï–ú–Ø –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤ —Ç–µ—á–µ–Ω–∏–∏: <b>{int(list["active"]["time"] / 60 / 60)}</b> —á–∞—Å–æ–≤.',
                                  reply_markup=keyboard_nov(group_id),
                                  parse_mode="html", disable_web_page_preview=True)
            bot.delete_message(message.chat.id, message.message_id)
        if val == "6":
            list_on["active"]["time"] = int(message.text) * 60 * 60
            with open('groups/' + str(group_id) + '/list_banned_words.json', "w", encoding="utf-8") as f:
                json.dump(list_on, f, ensure_ascii=False, indent=4)
                f.close()
            f = open('groups/' + str(group_id) + '/list_banned_words.json', 'r', encoding='utf-8')
            list = json.load(f)
            bot.edit_message_text(message_id=call.message.message_id, chat_id=call.message.chat.id,
                                  text=f'üìã–ú–µ–Ω—é —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –º–æ—Ç–∏–≤–∞—Ü–∏–∏.\n'
                                       f'‚úèÔ∏è–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑ —Å–ø–∏—Å–∫–∞, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å.\n\n'
                                       f'üö´–ü–æ–Ω–∏–∑–∏—Ç—å –∑–∞ –ë–ê–ù-–°–õ–û–í–ê: <b>{list["karma"]["punishment_ban_words"]}</b>\n'
                                       f'üëé–ü–æ–Ω–∏–∑–∏—Ç—å –∑–∞ –ü–õ–û–•–û–ô –ö–û–ú–ú–ï–ù–¢: <b>{list["karma"]["punishment_bad_comment"]}</b>\n '
                                       f'üëç–ü–æ–≤—ã—Å–∏—Ç—å –∑–∞ –•–û–†–û–®–ò–ô –ö–û–ú–ú–ï–ù–¢: <b>{list["karma"]["good_comment_reward"]}</b>\n'
                                       f'\n'
                                       f'üìù–ü–æ–≤—ã—Å–∏—Ç—å –∑–∞ –ù–û–í–û–ï –°–û–û–ë–©–ï–ù–ò–ï: <b>{list["active"]["new_messages"]}</b> \n'
                                       f'‚õî–ü–æ–Ω–∏–∑–∏—Ç—å –∑–∞ –ù–ï–ê–ö–¢–ò–í–ù–û–°–¢–¨: <b>{list["active"]["no_messages"]}</b>\n'
                                       f'üïú–í–†–ï–ú–Ø –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤ —Ç–µ—á–µ–Ω–∏–∏: <b>{int(list["active"]["time"] / 60 / 60)}</b> —á–∞—Å–æ–≤.',
                                  reply_markup=keyboard_nov(group_id),
                                  parse_mode="html", disable_web_page_preview=True)
            bot.delete_message(message.chat.id, message.message_id)
    else:
        f = open('groups/' + str(group_id) + '/list_banned_words.json', 'r', encoding='utf-8')
        list = json.load(f)
        bot.edit_message_text(message_id=call.message.message_id, chat_id=call.message.chat.id,
                              text=f'üìã–ú–µ–Ω—é —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –º–æ—Ç–∏–≤–∞—Ü–∏–∏.\n'
                                   f'‚úèÔ∏è–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑ —Å–ø–∏—Å–∫–∞, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å.\n\n'
                                   f'üö´–ü–æ–Ω–∏–∑–∏—Ç—å –∑–∞ –ë–ê–ù-–°–õ–û–í–ê: <b>{list["karma"]["punishment_ban_words"]}</b>\n'
                                   f'üëé–ü–æ–Ω–∏–∑–∏—Ç—å –∑–∞ –ü–õ–û–•–û–ô –ö–û–ú–ú–ï–ù–¢: <b>{list["karma"]["punishment_bad_comment"]}</b>\n'
                                   f'üëç–ü–æ–≤—ã—Å–∏—Ç—å –∑–∞ –•–û–†–û–®–ò–ô –ö–û–ú–ú–ï–ù–¢: <b>{list["karma"]["good_comment_reward"]}</b>\n'
                                   f'\n'
                                   f'üìù–ü–æ–≤—ã—Å–∏—Ç—å –∑–∞ –ù–û–í–û–ï –°–û–û–ë–©–ï–ù–ò–ï: <b>{list["active"]["new_messages"]}</b> \n'
                                   f'‚õî–ü–æ–Ω–∏–∑–∏—Ç—å –∑–∞ –ù–ï–ê–ö–¢–ò–í–ù–û–°–¢–¨: <b>{list["active"]["no_messages"]}</b>\n'
                                   f'üïú–í–†–ï–ú–Ø –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤ —Ç–µ—á–µ–Ω–∏–∏: <b>{int(list["active"]["time"] / 60 / 60)}</b> —á–∞—Å–æ–≤.'
                                   '\n\n ‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–≤–æ–¥–µ –∑–Ω–∞—á–µ–Ω–∏—è! –µ—â–µ —Ä–∞–∑ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –≤–≤–µ–¥–∏ '
                                   '–∑–Ω–∞—á–µ–Ω–∏–µ –ß–ò–°–õ–û–ú ‚ö†Ô∏è',
                              reply_markup=keyboard_nov(group_id),
                              parse_mode="html", disable_web_page_preview=True)
        bot.delete_message(message.chat.id, message.message_id)


def handler_motivation(call):
    idx = call.message.chat.id
    user_id = call.message.chat.id
    data = dt(call.data)
    flag = fs(call.data)

    # –Ω–∞ –ë–∞–Ω-—Å–ª–æ–≤–æ
    if flag == "m1":
        val = "1"
        group_id = data
        message = bot.send_message(call.message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –ß–ò–°–õ–û–ú –Ω–∞ —Å–∫–æ–ª—å–∫–æ –ø–æ–Ω–∏–∑–∏—Ç—å —Ä–µ–ø—É—Ç–∞—Ü–∏—é –∑–∞ –ë–ê–ù-–°–õ–û–í–ê")
        bot.register_next_step_handler(message, edit_motivation, call, group_id, val)

    # –Ω–∞ –ü–ª–æ—Ö–æ–π –∫–æ–º–º–µ–Ω—Ç
    if flag == "m2":
        val = "2"
        group_id = data
        message = bot.send_message(call.message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –ß–ò–°–õ–û–ú –Ω–∞ —Å–∫–æ–ª—å–∫–æ –ø–æ–Ω–∏–∑–∏—Ç—å —Ä–µ–ø—É—Ç–∞—Ü–∏—é –∑–∞ –ü–õ–û–•–û–ô "
                                                         "–ö–û–ú–ú–ï–ù–¢–ê–†–ò–ô")
        bot.register_next_step_handler(message, edit_motivation, call, group_id, val)

    # –Ω–∞ –•–æ—Ä–æ—à–∏–π –∫–æ–º–º–µ–Ω—Ç
    if flag == "m3":
        val = "3"
        group_id = data
        message = bot.send_message(call.message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –ß–ò–°–õ–û–ú –Ω–∞ —Å–∫–æ–ª—å–∫–æ —É–≤–µ–ª–∏—á–∏—Ç—å —Ä–µ–ø—É—Ç–∞—Ü–∏—é –∑–∞ –•–û–†–û–®–ò–ô "
                                                         "–ö–û–ú–ú–ï–ù–¢–ê–†–ò–ô")
        bot.register_next_step_handler(message, edit_motivation, call, group_id, val)

    # –Ω–∞ –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    if flag == "m4":
        val = "4"
        group_id = data
        message = bot.send_message(call.message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –ß–ò–°–õ–û–ú –Ω–∞ —Å–∫–æ–ª—å–∫–æ —É–≤–µ–ª–∏—á–∏—Ç—å —Ä–µ–ø—É—Ç–∞—Ü–∏—é –∑–∞ –ù–û–í–û–ï "
                                                         "–°–û–û–ë–©–ï–ù–ò–ï")
        bot.register_next_step_handler(message, edit_motivation, call, group_id, val)

    # –Ω–∞ –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
    if flag == "m5":
        val = "5"
        group_id = data
        message = bot.send_message(call.message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –ß–ò–°–õ–û–ú –Ω–∞ —Å–∫–æ–ª—å–∫–æ –ø–æ–Ω–∏–∑–∏—Ç—å —Ä–µ–ø—É—Ç–∞—Ü–∏—é –∑–∞ –ù–ï–ê–ö–¢–ò–í–ù–û–°–¢–¨")
        bot.register_next_step_handler(message, edit_motivation, call, group_id, val)

    # –Ω–∞ –í—Ä–µ–º—è
    if flag == "m6":
        val = "6"
        group_id = data
        message = bot.send_message(call.message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –ß–ò–°–õ–û–ú –∫–∞–∫–æ–π –ø—Ä–æ–º–µ–∂—É—Ç–æ–∫ –≤—Ä–µ–º–µ–Ω–∏ –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏.")
        bot.register_next_step_handler(message, edit_motivation, call, group_id, val)
